<Project>
  <Name>Assignment 6 design</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Assignment 6 design</Name>
    <Language>Java</Language>
    <Entities>
      <Entity type="Class">
        <Name>Town</Name>
        <Access>Public</Access>
        <Location left="691" top="997" />
        <Size width="218" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public int compareTo(Town o)</Member>
        <Member type="Method">public boolean equals(java.lang.Object obj)</Member>
        <Member type="Method">public java.lang.String getName()</Member>
        <Member type="Method">public java.lang.String toString()</Member>
        <Member type="Method">public LinkedHashSet getAdjacent()</Member>
        <Member type="Method">public int compareTo()</Member>
        <Member type="Method">public int hashCode()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Road</Name>
        <Access>Public</Access>
        <Location left="834" top="616" />
        <Size width="218" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public int compareTo(Road o)</Member>
        <Member type="Method">public boolean contains(Town town)</Member>
        <Member type="Method">public boolean equals(java.lang.Object r)</Member>
        <Member type="Method">public Town getDestination()</Member>
        <Member type="Method">public java.lang.String getName()</Member>
        <Member type="Method">public Town getSource()</Member>
        <Member type="Method">public int getWeight()</Member>
        <Member type="Method">public java.lang.String toString()</Member>
        <Member type="Constructor">public Road(Tow n)</Member>
        <Member type="Method">public boolean equals()</Member>
        <Member type="Method">public int compareTo()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TownGraphManager</Name>
        <Access>Public</Access>
        <Location left="560" top="177" />
        <Size width="220" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public boolean addRoad(String String)</Member>
        <Member type="Method">public String getRoad(String String)</Member>
        <Member type="Method">public boolean addTown(String n)</Member>
        <Member type="Method">public void getTown()</Member>
        <Member type="Method">public boolean containsTown()</Member>
        <Member type="Method">public boolean containsRoadConnection()</Member>
        <Member type="Method">public ArrayList&lt;String&gt; allRoads()</Member>
        <Member type="Method">public boolean deleteRoadConnection()</Member>
        <Member type="Method">public boolean deleteTown()</Member>
        <Member type="Method">public ArrayList&lt;String&gt; allTown()</Member>
        <Member type="Method">public ArrayList&lt;String&gt; getPath()</Member>
        <Member type="Method">public void clearTown()</Member>
        <Member type="Method">public ArrayList&lt;String&gt; getPathSets()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>FXMainPane</Name>
        <Access>Public</Access>
        <Location left="602" top="27" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DriverFX</Name>
        <Access>Public</Access>
        <Location left="834" top="27" />
        <Size width="162" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void start()</Member>
        <Member type="Constructor">public DriverFX()</Member>
        <Member type="Method">public static void main()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TownGraphManagerTestPublic</Name>
        <Access>Public</Access>
        <Location left="284" top="147" />
        <Size width="233" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public TownGraphManagerTestPublic()</Member>
        <Member type="Method">public void setUp()</Member>
        <Member type="Method">public void tearDown()</Member>
        <Member type="Method">public void testAddRoad()</Member>
        <Member type="Method">public void testGetRoad()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GraphTestPublic</Name>
        <Access>Public</Access>
        <Location left="396" top="575" />
        <Size width="162" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public GraphTestPublic()</Member>
        <Member type="Method">public void setUp()</Member>
        <Member type="Method">public void tearDown()</Member>
        <Member type="Method">public void testGetEdge()</Member>
        <Member type="Method">public void testAddEdge()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RoadTestStudent</Name>
        <Access>Public</Access>
        <Location left="602" top="555" />
        <Size width="162" height="162" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public RoadTestStudent()</Member>
        <Member type="Method">public void setUp()</Member>
        <Member type="Method">public void tearDown()</Member>
        <Member type="Method">public void testContains()</Member>
        <Member type="Method">public void testConnects()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TownGraph</Name>
        <Access>Public</Access>
        <Location left="820" top="224" />
        <Size width="232" height="349" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public TownGraph()</Member>
        <Member type="Method">public Road getEdge(Tow n)</Member>
        <Member type="Method">public Road addEdge(Tow n)</Member>
        <Member type="Method">public boolean addVertex(Tow n)</Member>
        <Member type="Method">public boolean containsEdge(Tow n)</Member>
        <Member type="Method">public boolean containsVertex(Tow n)</Member>
        <Member type="Method">public Set&lt;Road&gt; edgeSet()</Member>
        <Member type="Method">public ArrayList&lt;String&gt; getTown()</Member>
        <Member type="Method">public ArrayList&lt;String&gt; getTown()</Member>
        <Member type="Method">public Set&lt;Road&gt; edgesOf(Tow n)</Member>
        <Member type="Method">public Road removeEdge(Tow n)</Member>
        <Member type="Method">public boolean removeVertex(Tow n)</Member>
        <Member type="Method">public Set&lt;Town&gt; vertexSet()</Member>
        <Member type="Method">public ArrayList&lt;String&gt; shortestPath(Tow n)</Member>
        <Member type="Method">public void dijkstraShortestPath(Tow n)</Member>
        <Member type="Method">public String toString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>TownGraphManagerInterface</Name>
        <Access>Public</Access>
        <Location left="98" top="373" />
        <Size width="217" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Method">boolean addRoad()</Member>
        <Member type="Method">String getRoad()</Member>
        <Member type="Method">boolean addTown()</Member>
        <Member type="Method">Tow getTown()</Member>
        <Member type="Method">boolean containsTown()</Member>
        <Member type="Method">boolean containsRoadConnection()</Member>
        <Member type="Method">ArrayList&lt;String&gt; allRoads()</Member>
        <Member type="Method">boolean deleteRoadConnection()</Member>
        <Member type="Method">boolean deleteTown()</Member>
        <Member type="Method">ArrayList&lt;String&gt; allTowns()</Member>
        <Member type="Method">ArrayList&lt;String&gt; getPath()</Member>
      </Entity>
      <Entity type="Class">
        <Name>TownTestStudent</Name>
        <Access>Public</Access>
        <Location left="159" top="782" />
        <Size width="162" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public TownTestStudent()</Member>
        <Member type="Method">public void setUp()</Member>
        <Member type="Method">public void tearDown()</Member>
        <Member type="Method">public void testNames()</Member>
        <Member type="Method">public void testEquals()</Member>
        <Member type="Method">public void testCompare()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>GraphInterface</Name>
        <Access>Public</Access>
        <Location left="263" top="1018" />
        <Size width="199" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void getEdge()</Member>
        <Member type="Method">String addEdge()</Member>
        <Member type="Method">boolean addVertex()</Member>
        <Member type="Method">boolean containsEdge()</Member>
        <Member type="Method">boolean containsVertex()</Member>
        <Member type="Method">Set&lt;E&gt; edgeSet()</Member>
        <Member type="Method">Set&lt;E&gt; edgesOf()</Member>
        <Member type="Method">String removeEdge()</Member>
        <Member type="Method">boolean removeVertex()</Member>
        <Member type="Method">Set&lt;V&gt; vertexSet()</Member>
        <Member type="Method">ArrayList&lt;String&gt; shortestPath()</Member>
        <Member type="Method">void dijkstraShortestPath()</Member>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Generalization" first="3" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="5" second="9">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="6" second="11">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="6" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="8" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="1" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="8" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="7" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="10" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="2" second="8">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="2" second="9">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="7" second="1">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>